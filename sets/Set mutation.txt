# Set Mutation

# .update() or |=     
#    Update the set by adding elements from an iterable/another set.
# .intersection_update() or &=
#    Update the set by keeping only the elements found in it and an iterable/another set.
# .difference_update() or -=
#    Update the set by removing elements found in an iterable/another set.
# .symmetric_difference_update() or ^=
#    Update the set by only keeping the elements found in either set, but not in both

# Enter your code here. Read input from STDIN. Print output to STDOUT
_ = int(input())
s1 = set(map(int, input().split()))
N = int(input())

for _ in range(N):
    cmd, _ = input().split()
    s2 = set(map(int, input().split()))
    if(cmd == "intersection_update"):
        s1.intersection_update(s2)
    elif(cmd == "update"):
        s1.update(s2)
    elif(cmd == "symmetric_difference_update"):
        s1.symmetric_difference_update(s2)
    elif(cmd == "difference_update"):
        s1.difference_update(s2)

print(sum(s1))    
 

# Enter your code here.
    
if __name__ == '__main__':
    (_, A) = (int(input()),set(map(int, input().split())))
    B = int(input())
    for _ in range(B):
        (command, newSet) = (input().split()[0],set(map(int, input().split())))
        getattr(A, command)(newSet)

    print (sum(A))
        